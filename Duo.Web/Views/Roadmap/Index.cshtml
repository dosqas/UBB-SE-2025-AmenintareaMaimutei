@model List<DuoWebApp.ViewModels.SectionUnlockViewModel>

@{
    ViewData["Title"] = "Roadmap Sections";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
          rel="stylesheet" />
    <style>
        /* page background like WinUI */
        body {
            background-color: #1e1e1e;
            color: #fff;
        }

        .roadmap-container {
            background-color: #252526;
            padding: 2rem;
            border-radius: 8px;
            max-width: 1000px;
            margin: 2rem auto;
        }

        .section-card {
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.6);
            margin-bottom: 1.5rem;
        }

            .section-card.locked {
                opacity: 0.6;
            }

            .section-card .card-body {
                padding: 1rem 1.5rem;
            }

            .section-card .card-title {
                font-size: 1.25rem;
                margin-bottom: 0.5rem;
            }

            .section-card .card-text {
                color: #ccc;
                margin-bottom: 1rem;
            }

        /* Pills */
        .quiz-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            font-size: 12px;
            margin: 4px;
            border: 2px solid #0078D7;
            transition: transform .1s ease;
        }

            .quiz-circle.locked {
                background-color: rgba(255,255,255,0.15);
                border-color: rgba(255,255,255,0.3);
                cursor: default;
            }

            .quiz-circle.unlocked {
                background-color: #0078D7 !important;
                border-color: #0078D7 !important;
                cursor: pointer;
            }

            .quiz-circle.completed {
                background-color: #28a745 !important;
                border-color: #28a745 !important;
                cursor: default;
                position: relative;
            }

            .quiz-circle.completed::after {
                content: 'âœ“';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 14px;
                color: white;
            }

            .quiz-circle.unlocked:hover {
                transform: scale(1.1);
            }

        .quiz-wrapper {
            display: inline-block;
        }
    </style>
</head>
<body>
    <div class="roadmap-container">
        <h1 class="text-center mb-4">@ViewData["Title"]</h1>

        @if (Model == null || !Model.Any())
        {
            <div class="alert alert-info text-dark" role="alert">
                No sections found for this roadmap.
            </div>
        }
        else
        {
            @foreach (var sectionVm in Model.OrderBy(s => s.Section.OrderNumber))
            {
                var cardClass = sectionVm.IsUnlocked ? "section-card" : "section-card locked";
                <div class="@cardClass">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h5 class="card-title">@sectionVm.Section.Title</h5>
                            @if (!sectionVm.IsUnlocked)
                            {
                                <span class="badge bg-secondary">Locked</span>
                            }
                        </div>
                        <p class="card-text">@sectionVm.Section.Description</p>

                        <div>
                            @* Quizzes *@
                            @foreach (var quizVm in sectionVm.Quizzes)
                            {
                                string state;
                                if (quizVm.IsCompleted)
                                {
                                    state = "completed";
                                }
                                else if (quizVm.IsUnlocked)
                                {
                                    state = "unlocked";
                                }
                                else
                                {
                                    state = "locked";
                                }

                                var cssClass = $"quiz-circle {state}";
                                var shortName = $"Q{quizVm.Quiz.Id}";
                                var url = Url.Action("Preview", "Quiz", new { id = quizVm.Quiz.Id });

                                <div class="quiz-wrapper">
                                    @if (quizVm.IsUnlocked)
                                    {
                                        <a href="@url" title="Quiz @quizVm.Quiz.Id" class="text-decoration-none">
                                            <div class="@cssClass">@shortName</div>
                                        </a>
                                    }
                                    else
                                    {
                                        <div class="@cssClass" title="@(quizVm.IsCompleted ? "Completed" : "Locked")">
                                            @shortName
                                        </div>
                                    }
                                </div>
                            }

                            @* Final Exam *@
                            <div class="quiz-wrapper">
                                @if (sectionVm.Exam is not null)
                                {
                                    var ex = sectionVm.Exam;
                                    var stateExam = sectionVm.IsExamCompleted
                                    ? "completed"
                                    : sectionVm.IsExamUnlocked
                                    ? "unlocked"
                                    : "locked";
                                    var examClass = $"quiz-circle {stateExam}";
                                    var examLabel = $"E{ex.Id}";
                                    var examUrl = Url.Action("Preview", "Exam", new { id = ex.Id });

                                    @if (sectionVm.IsExamUnlocked)
                                    {
                                        <a href="@examUrl" title="Exam @ex.Id" class="text-decoration-none">
                                            <div class="@examClass">@examLabel</div>
                                        </a>
                                    }
                                    else
                                    {
                                        <div class="@examClass">@examLabel</div>
                                    }
                                }
                                else
                                {
                                    <div class="quiz-circle locked">N/A</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mt-3 text-dark" role="alert">
                @TempData["ErrorMessage"]
            </div>
        }
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
